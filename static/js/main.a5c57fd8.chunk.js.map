{"version":3,"sources":["input/input.js","App.js","index.js"],"names":["StyledDiv","styled","div","Styledinput","input","StyledLabel","label","InputData","props","className","htmlFor","placeholder","id","name","onChange","inputChangeProp","onClick","addToCartProp","App","state","itemObj","itemName","itemQty","itemPrice","totalPrice","itemsList","total","inputChangeHandler","event","target","value","setState","test","parseInt","alert","addToCartHandler","console","log","newItem","Object","values","includes","NaN","renderTableHeader","length","keys","map","key","index","toUpperCase","renderTableData","item","totalHandler","totalVal","forEach","tablepart","this","colSpan","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5c57fd8.chunk.js","sourcesContent":["import react from 'react';\r\n//import styled from 'styled-components';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDiv = styled.div`\r\n  margin: 20px;\r\n  border: 2px solid grey;\r\n  padding: 5px;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color : #DCE1E3;\r\n  flex-wrap: wrap;\r\n  box-shadow: 1px 2px #F7CAC9;\r\n  min-width: 0;\r\n @media (max-width: 550px) {\r\n      justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nconst Styledinput = styled.input`\r\n {\r\n   margin: 2px auto;\r\n   min-width: 0;\r\n   border: 2px outset green;\r\n   box-shadow: 1px 2px #F7CAC9;\r\n   padding: 1px;\r\n }\r\n`;\r\nconst StyledLabel = styled.label`\r\n {\r\n   margin: 2px auto;\r\n   min-width: 0;\r\n   /*border: 2px outset green;*/\r\n   /*box-shadow: 1px 2px #F7CAC9;*/\r\n   padding: 1px;\r\n\r\n }\r\n`;\r\n\r\nconst InputData = (props) => {\r\n  return (\r\n    <StyledDiv>\r\n      <div className='input1'>\r\n        <StyledLabel htmlFor='itemName'>Item Name : </StyledLabel>\r\n        <Styledinput \r\n          placeholder='Item Name' \r\n          id='itemName' \r\n          name='itemName'\r\n          onChange={props.inputChangeProp}></Styledinput>\r\n      </div>\r\n      <div className='input2'>\r\n        <StyledLabel htmlFor='itemQty'>Item Qty : </StyledLabel>\r\n        <Styledinput \r\n          placeholder='Item Qty' \r\n          id='itemQty' \r\n          name='itemQty'\r\n          onChange={props.inputChangeProp}></Styledinput>\r\n        </div>\r\n        <div className='input3'>\r\n        <StyledLabel htmlFor='itemPrice'>Item Price : </StyledLabel>\r\n        <Styledinput \r\n          placeholder='Item Price' \r\n          id='itemPrice' \r\n          name='itemPrice'\r\n          onChange={props.inputChangeProp}></Styledinput>\r\n        </div>\r\n        <button className='input4' onClick={props.addToCartProp}>ADD</button>\r\n    </StyledDiv>\r\n  );\r\n}\r\nexport default InputData;\r\n\r\n/*\r\n<label htmlFor='itemQty'>Item Quantity</label>\r\n        <input \r\n          placeholder='Item Quantity' \r\n          id='itemQty' \r\n          name='itemQty'\r\n          onChange={props.addToCartProp}></input>\r\n        <label htmlFor='itemPrice'>Item Price</label>\r\n        <input \r\n          placeholder='Item Price' \r\n          id='itemPrice' \r\n          name='itemPrice'\r\n          onChange={props.addToCartProp}></input>\r\n        <button type='submit'>ADD</button>\r\n*/","import { Component } from 'react';\nimport './App.css';\nimport InputData from './input/input.js';\nimport styled from 'styled-components';\n\n\nclass App extends Component{\n  state = {\n    itemObj:{\n      itemName : '',\n      itemQty : '',\n      itemPrice : '',\n      totalPrice : ''},\n    itemsList : [],\n    total : 0\n  }\n\n  inputChangeHandler = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    if(name === 'itemName')\n    {\n      this.setState(\n      {\n        itemObj: {\n        ...this.state.itemObj,\n        [name]: value\n       }\n      });\n    }\n    else\n    {\n      let isValid = /^\\d+$/.test(value);\n      if(isValid || value === ''){\n        this.setState(\n        {\n          itemObj: {...this.state.itemObj,[name]: parseInt(value)}\n        });\n      }\n      else{\n        alert('Enter valid numbers in Item Qty and Item Price')\n      }  \n    }\n  }\n  \n  addToCartHandler = () => {\n    console.log(this.state.itemObj);\n    let newItem = this.state.itemObj;\n    if(!( (newItem.itemQty === '') || (newItem.itemPrice === '') || (newItem.itemName === '') || (Object.values(newItem).includes(NaN)))){\n      newItem.totalPrice = newItem.itemQty * newItem.itemPrice;\n      this.setState(\n        {\n          itemsList: [...this.state.itemsList,newItem]\n        }\n      );\n      console.log(this.state.itemsList);\n      }\n      else{\n        alert('Empty or Invalid Quantity or Price Entered!!!');\n      }\n  }\n\n  renderTableHeader = () => {\n    if(this.state.itemsList.length === 0){\n      return null;\n    }\n    let header = Object.keys(this.state.itemsList[0]);\n    return header.map((key,index) => {\n      return <th key={index}>{key.toUpperCase()}</th>\n    });\n  }\n  \n  renderTableData = () => {\n    return (this.state.itemsList.map((item,index) => {\n      const {itemName , itemQty , itemPrice, totalPrice} = item\n      return (\n        <tr key={index}>\n          <td>{itemName}</td>\n          <td>{itemQty}</td>\n          <td>{itemPrice}</td>\n          <td>{totalPrice}</td>\n        </tr>\n      )\n    }))\n  }\n\n  totalHandler = () => {\n    let totalVal = 0;\n    this.state.itemsList.forEach((item) => {\n      console.log(item.totalPrice);\n      totalVal+=item.totalPrice;\n    });\n    console.log(totalVal);\n    this.setState({\n      total : totalVal\n    });\n  }\n\n  render() {\n    let tablepart = null;\n    if(!(this.state.itemsList.length === 0)){\n      tablepart = (\n        <table className='table'>\n          <tbody>\n            <tr>{this.renderTableHeader()}</tr>\n            {this.renderTableData()}\n            <tr>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td><button onClick={this.totalHandler}>SUBMIT</button></td>\n            </tr>\n            <tr>\n              <td colSpan=\"2\">TOTAL</td>\n              <td colSpan=\"2\">{this.state.total}</td>\n            </tr>\n          </tbody>\n      </table>\n      );\n    };\n    return (\n      <div className='App'>\n      <InputData\n      inputChangeProp = {this.inputChangeHandler}\n      addToCartProp = {this.addToCartHandler}\n      />\n      {tablepart}\n      </div> \n    );\n  }\n}\n\nexport default App;\n\n/*\ncomponentDidUpdate(){\n    console.log(this.state.itemsList)\n  }\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App/>,document.getElementById('root'));\n"],"sourceRoot":""}